USART1		// usart connessa al modulo bluetooth HC06 -> riceve comandi e inoltre credenziali
USART3		// usart connessa allo schedino ES32 -> inoltra comandi e riceve credenziali

int possesso = NONE;
volatile int lock = 0;

string command;
struct credentials{
	string user;
	string password;
};

#define ESP32 	0
#define HC06 	1
#define NONE 	-1

ISR_USART1:
	if atomic_set_bit(&lock):
		if possesso != ESP32:
			possesso = HC06
		lock &= ~(1 << 0)
	else:
		RTE
		
	switch(possesso):
		case HC06:
			command = USART1.receive()
			USART3.send(command)
			if (USART3->ISR & USART_ISR_RXNE):		// controllo se sospeso
				credentials = USART3.receive()
				USART1.send(credentials)
			possesso = NONE
	
		case ESP32:
			credentials = USART3.receive()
			USART1.send(credentials)
			if (USART1->ISR & USART_ISR_RXNE):
				command = USART1.receive()
				USART3.send(command)
			possesso = NONE
		
ISR_USART3:
	if atomic_set_bit(&lock):
		if possesso != ESP32:
			possesso = HC06
		lock &= ~(1 << 0)
	else:
		RTE
		
	switch(possesso):
		case ESP32:					// USART1 ha prioritÃ  maggiore, questo caso non si verifica
			credentials = USART3.receive()
			USART1.send(credentials)
			if (USART1->ISR & USART_ISR_RXNE):
				command = USART1.receive()
				USART3.send(command)
			possesso = NONE	
		
		case HC06:
			command = USART1.receive()
			USART3.send(command)
			if (USART3->ISR & USART_ISR_RXNE):
				credentials = USART3.receive()
				USART1.send(credentials)
			possesso = NONE
		
		
		
		
	

	
	
